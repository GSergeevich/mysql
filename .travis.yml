---
sudo: required

env: 
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"


services:        
  - docker

before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path=../' >ansible.cfg
  - container_id=$(mktemp) 
  - role_name=$(mktemp)
  - basename $PWD > $role_name
  - roles_dir=$(mktemp)  
  - echo ${PWD}/../ > $roles_dir  
  - 'docker run --detach --volume="$(cat ${roles_dir})":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  - >
    docker exec "$(cat ${container_id})" env TERM=xterm     
    ls /etc/ansible/roles/role_under_test/

    #Check syntax 
  - >
    docker exec "$(cat ${container_id})" env TERM=xterm     
    ansible-playbook /etc/ansible/roles/role_under_test/$(cat ${role_name})/tests/test.yml
    --syntax-check
   
    #First run playbook  
  - >
    docker exec "$(cat ${container_id})" env TERM=xterm     
    ansible-playbook /etc/ansible/roles/role_under_test/$(cat ${role_name})/tests/test.yml
  
    #Idempotence test
  - idempotence=$(mktemp)  
  - >
    docker exec "$(cat ${container_id})" env TERM=xterm     
    ansible-playbook /etc/ansible/roles/role_under_test/$(cat ${role_name})/tests/test.yml
    | tee -a ${idempotence}

  - >
    tail ${idempotence} 
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - >
    docker exec "$(cat ${container_id})" env TERM=xterm mysql --version      
          
notifications:
